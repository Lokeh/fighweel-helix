{:main hello-world.core}

^{:watch-dirs ["src/hello_world"]
  :css-dirs ["resources/public/css"]}

;; Standard ClojureScript compiler options
{:main         hello-world.core
 :output-to    "resources/public/js/titan-ui.js"
 :output-dir   "resources/public/js"
 :asset-path   "/js"
 :language-out :ecmascript5 ;; see https://dev.clojure.org/jira/browse/CLJS-2376

 :infer-externs  true
 :output-wrapper true
 :npm-deps       false

 ;; This ties together the work in `npm-libs`
 :foreign-libs [{:file           "npm-libs/dist/npm-libs-bundle.js"

                 ;; npm-libs/npm-to-cljs-library.js is the entry point for these provides:
                 ;; The `provides` is the name that will be `require`-able
                 :provides       ["ReactDOM"
                                  "react"]

                 ;; This maps the provider names, to ClojureScript names for a (:require)
                 ;; window.<object> -> (:require [my-object])
                 ;; object my-object
                 :global-exports {ReactDOM ReactDOM
                                  react React}}]}

